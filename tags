!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASM	boot/makefile	/^ASM			:=	nasm$/;"	m
ASM	lib/makefile	/^ASM			:=	nasm$/;"	m
ASM	makefile	/^ASM				=	nasm$/;"	m
ASMFLAGS	boot/makefile	/^ASMFLAGS	:=	-f elf$/;"	m
ASMFLAGS	lib/makefile	/^ASMFLAGS	:=	-f elf$/;"	m
ASMFLAGS	makefile	/^ASMFLAGS		=	-O0 -f elf -Wall$/;"	m
BUILD_ROOT	boot/makefile	/^BUILD_ROOT	:=	$(CURRENT_DIR)\/..\/$/;"	m
BUILD_ROOT	kernel/makefile	/^BUILD_ROOT	:=	$(CURRENT_DIR)\/..\/$/;"	m
BUILD_ROOT	lib/makefile	/^BUILD_ROOT	:=	$(CURRENT_DIR)\/..\/$/;"	m
CC	kernel/makefile	/^CC			:=	x86_64-elf-gcc$/;"	m
CC	lib/makefile	/^CC			:=	x86_64-elf-gcc$/;"	m
CC	makefile	/^CC				=	x86_64-elf-gcc$/;"	m
CFLAGS	kernel/makefile	/^CFLAGS		:=	-m32 -z nognustack$/;"	m
CFLAGS	lib/makefile	/^CFLAGS		:=	-m32 -z nognustack$/;"	m
CFLAGS	makefile	/^CFLAGS			=	-O0 -m32 -fno-builtin -z nognustack -Wall$/;"	m
CODE_DESC	boot/loader.S	/^	CODE_DESC:		dd	0x0000_FFFF$/;"	d
CPPFLAGS	makefile	/^CPPFLAGS		=	$(INC_FLAGS) -MD -MP$/;"	m
CURRENT_DIR	boot/makefile	/^CURRENT_DIR	:=	$(shell pwd)$/;"	m
CURRENT_DIR	kernel/makefile	/^CURRENT_DIR	:=	$(shell pwd)$/;"	m
CURRENT_DIR	lib/makefile	/^CURRENT_DIR	:=	$(shell pwd)$/;"	m
DATA_STACK_DESC	boot/loader.S	/^   DATA_STACK_DESC:	dd	0x0000_FFFF$/;"	d
DEPS	makefile	/^DEPS			=	$(OBJS:.o=.d)$/;"	m
GDT_BASE	boot/loader.S	/^	GDT_BASE:		dd	0x0000_0000$/;"	d
GDT_LIMIT	boot/loader.S	/^	GDT_LIMIT		equ	GDT_SIZE-1$/;"	d
GDT_SIZE	boot/loader.S	/^	GDT_SIZE		equ	$-GDT_BASE$/;"	d
IDT_DESC_16_TYPE	kernel/global.h	/^#define	 IDT_DESC_16_TYPE /;"	d
IDT_DESC_32_TYPE	kernel/global.h	/^#define	 IDT_DESC_32_TYPE /;"	d
IDT_DESC_ATTR_DPL0	kernel/global.h	/^#define	 IDT_DESC_ATTR_DPL0 /;"	d
IDT_DESC_ATTR_DPL3	kernel/global.h	/^#define	 IDT_DESC_ATTR_DPL3 /;"	d
IDT_DESC_CNT	kernel/interrupt.c	/^#define IDT_DESC_CNT	/;"	d	file:
IDT_DESC_DPL0	kernel/global.h	/^#define	 IDT_DESC_DPL0	/;"	d
IDT_DESC_DPL3	kernel/global.h	/^#define	 IDT_DESC_DPL3	/;"	d
IDT_DESC_P	kernel/global.h	/^#define	 IDT_DESC_P	/;"	d
IMAGE	boot/makefile	/^IMAGE		:=	$(BUILD_ROOT)\/hd32Mi.img$/;"	m
IMAGE	kernel/makefile	/^IMAGE		:=	$(BUILD_ROOT)\/hd32Mi.img$/;"	m
IMAGE	lib/makefile	/^IMAGE		:=	$(BUILD_ROOT)\/hd32Mi.img$/;"	m
IMAGE	makefile	/^IMAGE			=	hd32Mi.img$/;"	m
INC_DIRS	makefile	/^INC_DIRS		=	$(shell find $(SOURCE_DIRS) -type d)$/;"	m
INC_FLAGS	makefile	/^INC_FLAGS		=	$(addprefix -I,$(INC_DIRS))$/;"	m
KERNEL_MAP_BASE_ADDR	lib/kernel/print.S	/^KERNEL_MAP_BASE_ADDR			equ	0xc000_0000$/;"	d
LBB0_1	kernel/main.s	/^LBB0_1:                                 ## =>This Inner Loop Header: Depth=1$/;"	l
LD	makefile	/^LD				=	x86_64-elf-ld$/;"	m
LDFLAGS	boot/makefile	/^LDFLAGS		:=	-I include\/$/;"	m
LDFLAGS	lib/makefile	/^LDFLAGS		:=	-I include\/$/;"	m
LDFLAGS	makefile	/^LDFLAGS			=	-Ttext 0xc0001500 -m elf_i386 -e main  $/;"	m
LOADER	boot/makefile	/^LOADER		:=	loader$/;"	m
LUT	lib/kernel/print.S	/^	LUT		db "0","1","2","3","4","5","6","7" $/;"	d
MBR	boot/makefile	/^MBR			:=	mbr$/;"	m
OBJS	makefile	/^OBJS 			=	$(patsubst %,$(OBJ_DIR)%.o,$(SRCS))$/;"	m
OBJ_DIR	makefile	/^OBJ_DIR			=	$(SOURCE_ROOT)\/obj\/$/;"	m
PIC_M_CRTL	kernel/interrupt.c	/^#define PIC_M_CRTL	/;"	d	file:
PIC_M_DATA	kernel/interrupt.c	/^#define PIC_M_DATA	/;"	d	file:
PIC_S_CRTL	kernel/interrupt.c	/^#define PIC_S_CRTL	/;"	d	file:
PIC_S_DATA	kernel/interrupt.c	/^#define PIC_S_DATA	/;"	d	file:
RPL0	kernel/global.h	/^#define	 RPL0 /;"	d
RPL0	lib/kernel/print.S	/^RPL0			equ	0$/;"	d
RPL1	kernel/global.h	/^#define	 RPL1 /;"	d
RPL2	kernel/global.h	/^#define	 RPL2 /;"	d
RPL3	kernel/global.h	/^#define	 RPL3 /;"	d
SECTION	boot/loader.S	/^SECTION loader vstart=LOADER_BASE_ADDR$/;"	l
SECTION	boot/mbr.S	/^SECTION MBR vstart=0x7c00$/;"	l
SECTION	kernel/kernel.S	/^SECTION .data$/;"	l
SECTION	kernel/kernel.S	/^SECTION .text$/;"	l
SECTION	lib/kernel/print.S	/^SECTION .data$/;"	l
SELECTOR_CODE	boot/loader.S	/^	SELECTOR_CODE	equ	(0x0001<<3) + TI_GDT + RPL0$/;"	d
SELECTOR_DATA	boot/loader.S	/^	SELECTOR_DATA	equ	(0x0002<<3) + TI_GDT + RPL0$/;"	d
SELECTOR_K_CODE	kernel/global.h	/^#define SELECTOR_K_CODE	/;"	d
SELECTOR_K_DATA	kernel/global.h	/^#define SELECTOR_K_DATA	/;"	d
SELECTOR_K_GS	kernel/global.h	/^#define SELECTOR_K_GS	/;"	d
SELECTOR_K_STACK	kernel/global.h	/^#define SELECTOR_K_STACK /;"	d
SELECTOR_VIDEO	boot/loader.S	/^	SELECTOR_VIDEO	equ	(0x0003<<3) + TI_GDT + RPL0$/;"	d
SELECTOR_VIDEO	lib/kernel/print.S	/^SELECTOR_VIDEO	equ	(0x0003<<3) + TI_GDT + RPL0$/;"	d
SOURCE_DIRS	makefile	/^SOURCE_DIRS		=	$(SOURCE_ROOT)\/kernel	\\$/;"	m
SOURCE_ROOT	makefile	/^SOURCE_ROOT		= 	.$/;"	m
SRCS	makefile	/^SRCS			=	$(shell find $(SOURCE_DIRS) -name '*.c' -o -name '*.S')$/;"	m
TARGET	lib/makefile	/^TARGET		:=	lib$/;"	m
TARGET_KERNEL	makefile	/^TARGET_KERNEL	=	kernel.bin$/;"	m
TI_GDT	kernel/global.h	/^#define TI_GDT /;"	d
TI_GDT	lib/kernel/print.S	/^TI_GDT			equ	0$/;"	d
TI_LDT	kernel/global.h	/^#define TI_LDT /;"	d
VIDDEO_DESC	boot/loader.S	/^	VIDDEO_DESC:	dd	0x8000_0007			;limit=0xbfff-0xb800\/4k = 0x7$/;"	d
__KERNEL_GLOBAL_H	kernel/global.h	/^#define __KERNEL_GLOBAL_H$/;"	d
__KERNEL_INIT_H	kernel/init.h	/^#define __KERNEL_INIT_H$/;"	d
__KERNEL_INTERRUPT_H	kernel/interrupt.h	/^#define __KERNEL_INTERRUPT_H$/;"	d
__LIB_IO_H	lib/kernel/io.h	/^#define __LIB_IO_H$/;"	d
__LIB_KERNEL_PRINT_H	lib/kernel/print.h	/^#define __LIB_KERNEL_PRINT_H$/;"	d
__LIB_STDINT_H	lib/stdint.h	/^#define __LIB_STDINT_H$/;"	d
_main	kernel/main.s	/^_main:                                  ## @main$/;"	l
_read_n_disk_16	boot/mbr_func.S	/^_read_n_disk_16:$/;"	l
_read_n_disk_32	boot/loader_func.S	/^_read_n_disk_32:$/;"	l
ards_nr	boot/loader.S	/^	ards_nr			dw	0$/;"	d
attribute	kernel/interrupt.c	/^	uint8_t		attribute;$/;"	m	struct:gate_desc	file:
buf	lib/kernel/print.S	/^	buf	  	dq 0, 0$/;"	d
dcount	kernel/interrupt.c	/^	uint8_t		dcount;			\/\/Fixed for Interrupt Gate$/;"	m	struct:gate_desc	file:
enter_kernel	boot/loader.S	/^enter_kernel:$/;"	l
exception_init	kernel/interrupt.c	/^static void exception_init(void){$/;"	f	file:
extern	kernel/kernel.S	/^extern idt_table$/;"	l
f	makefile	/^	dd if=$(TARGET_KERNEL) of=$(IMAGE) bs=512 count=200 seek=9 conv=notrunc$/;"	m
func_offset_high_word	kernel/interrupt.c	/^	uint16_t	func_offset_high_word;$/;"	m	struct:gate_desc	file:
func_offset_low_word	kernel/interrupt.c	/^	uint16_t	func_offset_low_word;$/;"	m	struct:gate_desc	file:
gate_desc	kernel/interrupt.c	/^struct gate_desc{$/;"	s	file:
gdt_ptr	boot/loader.S	/^	gdt_ptr			dw	GDT_LIMIT$/;"	d
general_intr_handler	kernel/interrupt.c	/^static void general_intr_handler(uint8_t vec_nr){$/;"	f	file:
global	boot/mbr_func.S	/^global _read_n_disk_16$/;"	l
global	kernel/kernel.S	/^global intr_entry_table$/;"	l
global	kernel/kernel.S	/^global intr_exit$/;"	l
global	lib/kernel/print.S	/^global	put_char$/;"	l
global	lib/kernel/print.S	/^global	put_int1$/;"	l
global	lib/kernel/print.S	/^global	put_str$/;"	l
global	lib/kernel/print.S	/^global put_int$/;"	l
idt	kernel/interrupt.c	/^static struct gate_desc idt[IDT_DESC_CNT];$/;"	v	typeref:struct:gate_desc	file:
idt_desc_init	kernel/interrupt.c	/^static void idt_desc_init(void){$/;"	f	file:
idt_init	kernel/interrupt.c	/^void idt_init(void){$/;"	f
idt_table	kernel/interrupt.c	/^intr_handler idt_table[IDT_DESC_CNT];$/;"	v
inb	lib/kernel/io.h	/^static inline void inb(uint16_t port){$/;"	f
init_all	kernel/init.c	/^void init_all(){$/;"	f
insw	lib/kernel/io.h	/^static inline void insw(uint16_t port, const void* addr, uint32_t word_cnt){$/;"	f
int16_t	lib/stdint.h	/^typedef signed short int int16_t;$/;"	t
int32_t	lib/stdint.h	/^typedef signed int int32_t;$/;"	t
int64_t	lib/stdint.h	/^typedef signed long long int int64_t;$/;"	t
int8_t	lib/stdint.h	/^typedef signed char int8_t;$/;"	t
intr_entry_table	kernel/kernel.S	/^	intr_entry_table:$/;"	l
intr_exit	kernel/kernel.S	/^	intr_exit:$/;"	l
intr_handler	kernel/interrupt.h	/^typedef void* intr_handler;$/;"	t
intr_name	kernel/interrupt.c	/^char* intr_name[IDT_DESC_CNT];$/;"	v
kernel_init	boot/loader_func.S	/^kernel_init:$/;"	l
loader_start	boot/loader.S	/^loader_start:$/;"	l
main	kernel/main.c	/^int main(void)$/;"	f
make_idt_desc	kernel/interrupt.c	/^static void make_idt_desc(struct gate_desc* p_gdesc, uint8_t attr, intr_handler function){$/;"	f	file:
mem_cpy	boot/loader_func.S	/^mem_cpy:$/;"	l
mul	boot/loader_func.S	/^		mul dx$/;"	d
mul	boot/mbr_func.S	/^		mul dx$/;"	d
outb	lib/kernel/io.h	/^static inline void outb(uint16_t port, uint8_t data){$/;"	f
outsw	lib/kernel/io.h	/^static inline void outsw(uint16_t port, const void* addr, uint32_t word_cnt){$/;"	f
p_mode_start	boot/loader.S	/^p_mode_start:$/;"	l
pic_init	kernel/interrupt.c	/^static void pic_init(){$/;"	f	file:
pop	kernel/kernel.S	/^		pop ds$/;"	d
popad	lib/kernel/print.S	/^popad$/;"	l
push	kernel/kernel.S	/^		push ds$/;"	d
put_char	lib/kernel/print.S	/^put_char:$/;"	l
put_int	lib/kernel/print.S	/^put_int:$/;"	l
put_int1	lib/kernel/print.S	/^put_int1:$/;"	l
put_int_buffer	lib/kernel/print.S	/^	put_int_buffer dq 0$/;"	d
put_str	lib/kernel/print.S	/^put_str:$/;"	l
ret	boot/loader_func.S	/^ret $/;"	l
ret	boot/loader_func.S	/^ret$/;"	l
ret	lib/kernel/print.S	/^ret$/;"	l
section	lib/kernel/print.S	/^section .text$/;"	l
selector	kernel/interrupt.c	/^	uint16_t	selector;$/;"	m	struct:gate_desc	file:
setup_page	boot/loader_func.S	/^setup_page:$/;"	l
total_mem_bytes	boot/loader.S	/^	total_mem_bytes	dd	0$/;"	d
uint16_t	lib/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	lib/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	lib/stdint.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint8_t	lib/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
